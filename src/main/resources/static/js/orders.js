console.log('üì¶ Orders module loaded');

async function loadOrders() {
    const phoneInput = document.getElementById('orderPhone');
    if (!phoneInput) {
        console.error('Order phone input not found');
        return;
    }
    
    const phone = phoneInput.value.trim();
    console.log('Loading orders for phone:', phone);
    
    if (!isValidPhone(phone)) {
        NotificationManager.show('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', 'error');
        phoneInput.focus();
        return;
    }

    const container = document.getElementById('ordersList');
    if (!container) {
        console.error('Orders container not found');
        return;
    }
    
    container.innerHTML = '<div class="loading">–ü–æ–∏—Å–∫ –∑–∞–∫–∞–∑–æ–≤...</div>';

    try {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É
        // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º mock –¥–∞–Ω–Ω—ã–µ
        console.log('Fetching orders from API...');
        
        // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        const mockOrders = [
            {
                id: 1,
                dateTime: '2024-01-15T14:30:00',
                status: 'ACCEPTED',
                guestId: 1,
                totalAmount: 1250.50
            },
            {
                id: 2,
                dateTime: '2024-01-14T18:45:00',
                status: 'COMPLETED',
                guestId: 1,
                totalAmount: 890.00
            },
            {
                id: 3,
                dateTime: '2024-01-13T12:15:00',
                status: 'IN_PROGRESS',
                guestId: 1,
                totalAmount: 2100.00
            }
        ];
        
        displayOrders(mockOrders);
        NotificationManager.show(`–ù–∞–π–¥–µ–Ω–æ ${mockOrders.length} –∑–∞–∫–∞–∑–æ–≤`, 'success');
        
    } catch (error) {
        console.error('Error loading orders:', error);
        container.innerHTML = `
            <div class="error">
                <h3>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤</h3>
                <p>${error.message}</p>
                <button onclick="loadOrders()" class="btn btn-primary">–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</button>
            </div>
        `;
        NotificationManager.show('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤', 'error');
    }
}

function displayOrders(orders) {
    const container = document.getElementById('ordersList');
    
    if (!orders || orders.length === 0) {
        container.innerHTML = `
            <div class="empty-orders">
                <i class="fas fa-receipt"></i>
                <h3>–ó–∞–∫–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
                <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤ –∏–ª–∏ –≤–≤–µ–¥–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</p>
            </div>
        `;
        return;
    }

    container.innerHTML = orders.map(order => `
        <div class="order-card" data-order-id="${order.id}">
            <div class="order-header">
                <div class="order-info">
                    <div class="order-id">–ó–∞–∫–∞–∑ #${order.id}</div>
                    <div class="order-date">${formatDateTime(order.dateTime)}</div>
                </div>
                <div class="order-status ${getStatusClass(order.status)}">
                    ${getStatusText(order.status)}
                </div>
            </div>
            
            <div class="order-details">
                <div class="order-detail">
                    <span class="detail-label">ID –≥–æ—Å—Ç—è:</span>
                    <span class="detail-value">${order.guestId}</span>
                </div>
                <div class="order-detail">
                    <span class="detail-label">–°—Ç–∞—Ç—É—Å:</span>
                    <span class="detail-value">${getStatusText(order.status)}</span>
                </div>
                <div class="order-detail">
                    <span class="detail-label">–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</span>
                    <span class="detail-value">${formatDateTime(order.dateTime)}</span>
                </div>
            </div>
            
            <div class="order-footer">
                <div class="order-total">
                    –ò—Ç–æ–≥–æ: <span class="total-amount">${formatPrice(order.totalAmount)} ‚ÇΩ</span>
                </div>
                <button class="btn btn-outline" onclick="viewOrderDetails(${order.id})">
                    <i class="fas fa-eye"></i> –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏
                </button>
            </div>
        </div>
    `).join('');
    
    console.log(`Displayed ${orders.length} orders`);
}

function getStatusClass(status) {
    const statusClasses = {
        'ACCEPTED': 'status-accepted',
        'COMPLETED': 'status-completed',
        'IN_PROGRESS': 'status-in-progress',
        'DRAFT': 'status-draft',
        'CANCELLED': 'status-cancelled'
    };
    return statusClasses[status] || 'status-draft';
}

function getStatusText(status) {
    const statusTexts = {
        'ACCEPTED': '–ü—Ä–∏–Ω—è—Ç',
        'COMPLETED': '–í—ã–ø–æ–ª–Ω–µ–Ω',
        'IN_PROGRESS': '–í –ø—Ä–æ—Ü–µ—Å—Å–µ',
        'DRAFT': '–ß–µ—Ä–Ω–æ–≤–∏–∫',
        'CANCELLED': '–û—Ç–º–µ–Ω–µ–Ω'
    };
    return statusTexts[status] || status;
}

function viewOrderDetails(orderId) {
    console.log('Viewing order details:', orderId);
    NotificationManager.show(`–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ #${orderId} (—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)`, 'info');
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
window.loadOrders = loadOrders;
window.viewOrderDetails = viewOrderDetails;